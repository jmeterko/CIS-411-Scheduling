

-- Drops everything and creates CSA tables but not security

   DROP TABLE IF EXISTS studentclass;
   DROP TABLE IF EXISTS studentmajor;
   DROP TABLE IF EXISTS courseoffering;
   DROP TABLE IF EXISTS course;
   DROP TABLE IF EXISTS student;
   DROP TABLE IF EXISTS userroles;
   DROP TABLE IF EXISTS rolefunctions;
   DROP TABLE IF EXISTS userprograms;
   DROP TABLE IF EXISTS programsubject;
   DROP TABLE IF EXISTS users;
   DROP TABLE IF EXISTS roles;
   DROP TABLE IF EXISTS functions;

CREATE TABLE IF NOT EXISTS `course` (
  `Subject` varchar(4) NOT NULL,
  `Catalog` varchar(5) NOT NULL,
  `Name` varchar(30) NOT NULL,
  `Acad_Org` varchar(4) NOT NULL,
  constraint PK_course Primary Key (Subject, Catalog )
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

CREATE TABLE IF NOT EXISTS`courseoffering` (
  `Term` int(11) NOT NULL,
  `Session` varchar(3) NOT NULL,
  `Subject` varchar(4) NOT NULL,
  `Catalog` varchar(5) NOT NULL,
  `Section` varchar(4) NOT NULL,
  `InstructorName` varchar(22) NOT NULL,
  `Count_ID` int(11) NOT NULL,
  `Start_Time` varchar(5) DEFAULT NULL,
  `End_Time` varchar(5) DEFAULT NULL,
  `Days` varchar(5) DEFAULT NULL,
  `Cap_Enrl` int(11) NOT NULL,
  constraint PK_courseoffering Primary Key (Term, Session, Subject, Catalog, Section),
  constraint FK_courseoffering_course Foreign Key (Subject, Catalog) references course(Subject, Catalog)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;


CREATE TABLE IF NOT EXISTS `student` (
  `ID` int(11) NOT NULL,
  `Name` varchar(30) NOT NULL,
  `Last_Term` int(11) NOT NULL,
  `Current` varchar(1) NOT NULL,
  `Location` varchar(7) NOT NULL,
  `Total` decimal(7,3) NOT NULL,
  `GPA` decimal(5,3) NOT NULL,
  `Phone` varchar(14) NOT NULL,
  `EagleMail_ID` varchar(38) NOT NULL,
  `Advisor_1` varchar(27) DEFAULT NULL,
  `Advisor_1_Email` varchar(24) DEFAULT NULL,
  `Advisor_2` varchar(22) DEFAULT NULL,
  `Advisor_2_Email` varchar(24) DEFAULT NULL,
  `Degree_Term` int(11) DEFAULT NULL,
  `Degree` varchar(4) DEFAULT NULL,
  `Graduated_Plan_1` varchar(10) DEFAULT NULL,
  `Graduated_Plan_2` varchar(10) DEFAULT NULL,
  `Graduated_Plan_3` varchar(10) DEFAULT NULL,
  `Graduated_Plan_4` varchar(10) DEFAULT NULL,
  `Graduated_Plan_5` varchar(30) DEFAULT NULL,
   constraint PK_student Primary Key (ID)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

CREATE TABLE IF NOT EXISTS `studentclass` (
  `ID` int(11) NOT NULL,
  `Term` int(11) NOT NULL,
  `Session` varchar(3) NOT NULL,
  `Subject` varchar(4) NOT NULL,
  `Catalog` varchar(5) NOT NULL,
  `Section` varchar(4) NOT NULL,
  `Grade` varchar(2) NOT NULL,
  `Descr` varchar(30),
  constraint PK_studentclass Primary Key (ID, Term, Session, Subject, Catalog, Section),
  constraint FK_studentclass_student Foreign Key (ID) references student(ID)
  )ENGINE=InnoDB DEFAULT CHARSET=latin1;

  CREATE INDEX IDX_STUDENTCLASS
  ON studentclass (Subject, Catalog);

CREATE TABLE IF NOT EXISTS `acad_program` (
  `Plan` varchar(10) NOT NULL,
  `Plan_Descr` varchar(30) DEFAULT NULL,

  constraint PK_acad_program Primary Key (Plan)
  )ENGINE=InnoDB DEFAULT CHARSET=latin1;

CREATE TABLE IF NOT EXISTS`studentmajor` (
  `ID` int(11) NOT NULL,
  `Plan` varchar(10) NOT NULL,

  constraint PK_studentmajor Primary Key (ID, Plan),
  constraint FK_studentmajor_student Foreign Key (ID) references student(ID),
  constraint FK_studentmajor_acad_program Foreign Key (Plan) references acad_program(Plan)
  )ENGINE=InnoDB DEFAULT CHARSET=latin1;

CREATE TABLE IF NOT EXISTS `settings` (
  `Oldest_Term` int(4) NOT NULL,
  `Current_Term` int(4) NOT NULL,
  `Latest_Term` int(4) NOT NULL,
  `Last_Import_Date` date NOT NULL,
  constraint PK_settings Primary Key (Oldest_Term)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

CREATE TABLE IF NOT EXISTS `subject` (
  `Subject` varchar(4) NOT NULL,

  constraint PK_subject Primary Key (Subject)
  )ENGINE=InnoDB DEFAULT CHARSET=latin1;

CREATE TABLE IF NOT EXISTS `programsubject` (
  `Plan` varchar(10) NOT NULL,
  `Subject` varchar(4) NOT NULL,

  constraint PK_programsubject Primary Key (Subject, Plan),
  constraint FK_programsubject_subject Foreign Key (Subject) references subject(Subject),
  constraint FK_programsubject_acad_program Foreign Key (Plan) references acad_program(Plan)
  )ENGINE=InnoDB DEFAULT CHARSET=latin1;



-- why isn't our CREATE working for our student ID FK?
-- for now, we add the INDEX after creating the table
-- Need to fix our CREATE statement before shipping, this is some janky shit

CREATE TABLE `functions` (
  `FunctionID` int(11) NOT NULL,
  `Name` varchar(64) NOT NULL,
  `Description` text
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `functions`
--

INSERT INTO `functions` (`FunctionID`, `Name`, `Description`) VALUES
(1, 'SecurityManageUsers', 'Allows for reading users and interface to add, change, and delete.'),
(2, 'SecurityUserAdd', 'Allows for adding of users by enabling link on manage form.'),
(3, 'SecurityUserEdit', 'Allows for editing of users by enabling link on manage form.'),
(4, 'SecurityUserDelete', 'Allows for deleting of users by enabling checkbox on manage form.'),
(5, 'SecurityProcessUserAddEdit', 'Required to process an add, change, or delete of users.'),
(6, 'SecurityManageFunctions', 'Allows for reading functions and interface to add, change, and delete.'),
(7, 'SecurityFunctionAdd', 'Allows for adding of functions by enabling link on manage form.'),
(8, 'SecurityFunctionEdit', 'Allows for editing of functions by enabling link on manage form.'),
(9, 'SecurityFunctionDelete', 'Allows for deleting of functions by enabling checkbox on manage form.'),
(10, 'SecurityProcessFunctionAddEdit', 'Required to process an add, change, or delete of functions.'),
(11, 'SecurityManageRoles', 'Allows for reading roles and interface to add, change, and delete.'),
(12, 'SecurityRoleAdd', 'Allows for adding of roles by enabling link on manage form.'),
(13, 'SecurityRoleEdit', 'Allows for editing of roles by enabling link on manage form.'),
(14, 'SecurityRoleDelete', 'Allows for deleting of roles by enabling checkbox on manage form.'),
(15, 'SecurityProcessRoleAddEdit', 'Required to process an add, change, or delete of roles.'),
(16, 'SecurityLogin', 'Provide Username and Password'),
(17, 'SecurityLogOut', 'Exit the application.'),
(18, 'SecurityProcessLogin', 'Try to authorize a user login.'),
(19, 'SecurityHome', 'Default security page with login button.'),
(20, 'SecurityManageUsers', 'Allows for reading users and interface to add, change, and delete.'),
(21, 'SecurityUserAdd', 'Allows for adding of users by enabling link on manage form.'),
(22, 'SecurityUserEdit', 'Allows for editing of users by enabling link on manage form.'),
(23, 'SecurityUserDelete', 'Allows for deleting of users by enabling checkbox on manage form.'),
(24, 'SecurityProcessUserAddEdit', 'Required to process an add, change, or delete of users.'),
(25, 'SecurityManageFunctions', 'Allows for reading functions and interface to add, change, and delete.'),
(26, 'SecurityFunctionAdd', 'Allows for adding of functions by enabling link on manage form.'),
(27, 'SecurityFunctionEdit', 'Allows for editing of functions by enabling link on manage form.'),
(28, 'SecurityFunctionDelete', 'Allows for deleting of functions by enabling checkbox on manage form.'),
(29, 'SecurityProcessFunctionAddEdit', 'Required to process an add, change, or delete of functions.'),
(30, 'SecurityManageRoles', 'Allows for reading roles and interface to add, change, and delete.'),
(31, 'SecurityRoleAdd', 'Allows for adding of roles by enabling link on manage form.'),
(32, 'SecurityRoleEdit', 'Allows for editing of roles by enabling link on manage form.'),
(33, 'SecurityRoleDelete', 'Allows for deleting of roles by enabling checkbox on manage form.'),
(34, 'SecurityProcessRoleAddEdit', 'Required to process an add, change, or delete of roles.'),
(35, 'SecurityLogin', 'Provide Username and Password'),
(36, 'SecurityLogOut', 'Exit the application.'),
(37, 'SecurityProcessLogin', 'Try to authorize a user login.'),
(38, 'SecurityHome', 'Default security page with login button.');

-- --------------------------------------------------------

--
-- Table structure for table `rolefunctions`
--

CREATE TABLE `rolefunctions` (
  `RoleID` int(11) NOT NULL,
  `FunctionID` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `rolefunctions`
--

INSERT INTO `rolefunctions` (`RoleID`, `FunctionID`) VALUES
(1, 1),
(1, 2),
(1, 3),
(1, 4),
(1, 5),
(1, 6),
(1, 7),
(1, 8),
(1, 9),
(1, 10),
(1, 11),
(1, 12),
(1, 13),
(1, 14),
(1, 15),
(2, 1),
(2, 6),
(2, 7),
(2, 8),
(2, 9),
(2, 10),
(2, 11),
(2, 12),
(2, 13),
(2, 14),
(2, 15),
(3, 1),
(3, 6),
(3, 11),
(4, 11),
(4, 16),
(4, 17),
(4, 18),
(4, 19),
(1, 1),
(1, 2),
(1, 3),
(1, 4),
(1, 5),
(1, 6),
(1, 7),
(1, 8),
(1, 9),
(1, 10),
(1, 11),
(1, 12),
(1, 13),
(1, 14),
(1, 15),
(2, 1),
(2, 6),
(2, 7),
(2, 8);

-- --------------------------------------------------------

--
-- Table structure for table `roles`
--

CREATE TABLE `roles` (
  `RoleID` int(11) NOT NULL,
  `Name` varchar(32) NOT NULL,
  `Description` text
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `roles`
--

INSERT INTO `roles` (`RoleID`, `Name`, `Description`) VALUES
(1, 'admin', 'Full privileges.'),
(2, 'updater', 'Update/Read privileges.'),
(3, 'reader', 'Read-only privileges.'),
(4, 'guest', 'Features available to all visitors without logging in.'),
(5, 'admin', 'Full privileges.'),
(6, 'updater', 'Update/Read privileges.'),
(7, 'reader', 'Read-only privileges.'),
(8, 'guest', 'Features available to all visitors without logging in.');

-- --------------------------------------------------------

--
-- Table structure for table `userroles`
--

CREATE TABLE `userroles` (
  `UserID` int(11) NOT NULL,
  `RoleID` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `userroles`
--

INSERT INTO `userroles` (`UserID`, `RoleID`) VALUES
(1, 1),
(2, 2),
(3, 3),
(4, 4);

-- --------------------------------------------------------

--
-- Table structure for table `users`
--

CREATE TABLE `users` (
  `UserID` int(11) NOT NULL,
  `FirstName` varchar(32) NOT NULL,
  `LastName` varchar(32) NOT NULL,
  `UserName` varchar(32) NOT NULL,
  `Password` varchar(40) NOT NULL,
  `Email` varchar(32) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `users`
--

INSERT INTO `users` (`UserID`, `FirstName`, `LastName`, `UserName`, `Password`, `Email`) VALUES
(1, 'Jon', 'ODonnell', 'admin', 'admin', 'jodonnell@clarion.edu'),
(2, 'Bill', 'Updater', 'bill', 'c692d6a10598e0a801576fdd4ecf3c37e45bfbc4', 'bill@localhost'),
(3, 'Joe', 'Reader', 'joe', '16a9a54ddf4259952e3c118c763138e83693d7fd', 'joe@localhost'),
(4, 'guest', 'guest', 'guest', '35675e68f4b5af7b995d9205ad0fc43842f16450', 'guest@localhost'),
(5, 'Jon', 'ODonnell', 'admin', 'd033e22ae348aeb5660fc2140aec35850c4da997', 'jodonnell@clarion.edu'),
(6, 'Bill', 'Updater', 'bill', 'c692d6a10598e0a801576fdd4ecf3c37e45bfbc4', 'bill@localhost'),
(7, 'Joe', 'Reader', 'joe', '16a9a54ddf4259952e3c118c763138e83693d7fd', 'joe@localhost'),
(8, 'guest', 'guest', 'guest', '35675e68f4b5af7b995d9205ad0fc43842f16450', 'guest@localhost');

--
-- Indexes for dumped tables
--

--
-- Indexes for table `functions`
--
ALTER TABLE `functions`
  ADD PRIMARY KEY (`FunctionID`);

--
-- Indexes for table `rolefunctions`
--
ALTER TABLE `rolefunctions`
  ADD KEY `RoleID` (`RoleID`),
  ADD KEY `FunctionID` (`FunctionID`);

--
-- Indexes for table `roles`
--
ALTER TABLE `roles`
  ADD PRIMARY KEY (`RoleID`);

--
-- Indexes for table `userroles`
--
ALTER TABLE `userroles`
  ADD KEY `UserID` (`UserID`),
  ADD KEY `RoleID` (`RoleID`);

--
-- Indexes for table `users`
--
ALTER TABLE `users`
  ADD PRIMARY KEY (`UserID`);

--
-- AUTO_INCREMENT for dumped tables
--

--
-- AUTO_INCREMENT for table `functions`
--
ALTER TABLE `functions`
  MODIFY `FunctionID` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=39;

--
-- AUTO_INCREMENT for table `roles`
--
ALTER TABLE `roles`
  MODIFY `RoleID` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=9;

--
-- AUTO_INCREMENT for table `users`
--
ALTER TABLE `users`
  MODIFY `UserID` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=9;

--
-- Constraints for dumped tables
--

--
-- Constraints for table `rolefunctions`
--
ALTER TABLE `rolefunctions`
  ADD CONSTRAINT `rolefunctions_ibfk_1` FOREIGN KEY (`RoleID`) REFERENCES `roles` (`RoleID`) ON DELETE CASCADE,
  ADD CONSTRAINT `rolefunctions_ibfk_2` FOREIGN KEY (`FunctionID`) REFERENCES `functions` (`FunctionID`) ON DELETE CASCADE;

--
-- Constraints for table `userroles`
--
ALTER TABLE `userroles`
  ADD CONSTRAINT `userroles_ibfk_1` FOREIGN KEY (`UserID`) REFERENCES `users` (`UserID`) ON DELETE CASCADE,
  ADD CONSTRAINT `userroles_ibfk_2` FOREIGN KEY (`RoleID`) REFERENCES `roles` (`RoleID`) ON DELETE CASCADE;