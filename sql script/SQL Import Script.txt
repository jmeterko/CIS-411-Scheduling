-- Database: `cis411_csaapp`
--

-- --------------------------------------------------------





   DROP TABLE IF EXISTS studentclass;
   DROP TABLE IF EXISTS studentmajor;
   DROP TABLE IF EXISTS courseoffering;
   DROP TABLE IF EXISTS course;
   DROP TABLE IF EXISTS student;
   DROP TABLE IF EXISTS settings;
-- --------------------------------------------------------------------------------------------


CREATE TABLE IF NOT EXISTS `roles` (
  `RoleID` int(11) NOT NULL,
  `Name` varchar(32) NOT NULL,
  `Description` text
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `roles`
--

INSERT IGNORE INTO `roles` (`RoleID`, `Name`, `Description`) VALUES
(1, 'admin', 'Full privileges.'),
(2, 'updater', 'Update/Read privileges.'),
(3, 'reader', 'Read-only privileges.'),
(4, 'guest', 'Features available to all visitors without logging in.');

-- --------------------------------------------------------

--
-- Table structure for table `userroles`
--

CREATE TABLE IF NOT EXISTS `userroles` (
  `UserName` varchar(32) NOT NULL,
  `RoleID` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `userroles`
--

INSERT IGNORE INTO `userroles` (`UserName`, `RoleID`) VALUES
('admin', 1),
('bill', 2),
('joe', 3),
('guest', 4);

-- --------------------------------------------------------

--
-- Table structure for table `users`
--

CREATE TABLE IF NOT EXISTS `users` (
  `FirstName` varchar(32) NOT NULL,
  `LastName` varchar(32) NOT NULL,
  `UserName` varchar(32) NOT NULL,
  `Email` varchar(32) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

INSERT IGNORE INTO `users` (`FirstName`, `LastName`, `UserName`, `Email`) VALUES
('Jon', 'ODonnell', 'admin', 'jodonnell@clarion.edu'),
('Bill', 'Updater', 'bill', 'bill@localhost'),
('Joe', 'Reader', 'joe', 'joe@localhost'),
('guest', 'guest', 'guest', 'guest@localhost');



  -- ---------------------- ^USERS^ -------------------------------------------------------------------------

CREATE TABLE IF NOT EXISTS `functions` (
  `FunctionID` int(11) NOT NULL,
  `Name` varchar(64) NOT NULL,
  `Description` text
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `functions`
--

INSERT IGNORE INTO `functions` (`FunctionID`, `Name`, `Description`) VALUES
(1, 'SecurityManageUsers', 'Allows for reading users and interface to add, change, and delete.'),
(2, 'SecurityUserAdd', 'Allows for adding of users by enabling link on manage form.'),
(3, 'SecurityUserEdit', 'Allows for editing of users by enabling link on manage form.'),
(4, 'SecurityUserDelete', 'Allows for deleting of users by enabling checkbox on manage form.'),
(5, 'SecurityProcessUserAddEdit', 'Required to process an add, change, or delete of users.'),
(6, 'SecurityManageFunctions', 'Allows for reading functions and interface to add, change, and delete.'),
(7, 'SecurityFunctionAdd', 'Allows for adding of functions by enabling link on manage form.'),
(8, 'SecurityFunctionEdit', 'Allows for editing of functions by enabling link on manage form.'),
(9, 'SecurityFunctionDelete', 'Allows for deleting of functions by enabling checkbox on manage form.'),
(10, 'SecurityProcessFunctionAddEdit', 'Required to process an add, change, or delete of functions.'),
(11, 'SecurityManageRoles', 'Allows for reading roles and interface to add, change, and delete.'),
(12, 'SecurityRoleAdd', 'Allows for adding of roles by enabling link on manage form.'),
(13, 'SecurityRoleEdit', 'Allows for editing of roles by enabling link on manage form.'),
(14, 'SecurityRoleDelete', 'Allows for deleting of roles by enabling checkbox on manage form.'),
(15, 'SecurityProcessRoleAddEdit', 'Required to process an add, change, or delete of roles.'),
(16, 'SecurityLogin', 'Provide Username and Password'),
(17, 'SecurityLogOut', 'Exit the application.'),
(18, 'SecurityProcessLogin', 'Try to authorize a user login.'),
(19, 'SecurityHome', 'Default security page with login button.'),
(20, 'About', 'Describes our site'),
(21, 'AddData', 'Adds new data to SQL table'),
(22, 'Backstory', 'Describes our backstory of the book'),
(23, 'Construction', 'Current page is under development'),
(24, 'CurrentNewsletter', 'Shows this month\'s newsletter'),
(25, 'currentTextFiles', 'Shows current records of reviews and quotes text files'),
(26, 'DeleteData', 'Deletes current SQL entry on screen'),
(27, 'DisplayBook', 'Displays currently selected SQL entry'),
(28, 'EditData', 'Allows modification of current SQL entry'),
(29, 'fileManagement', 'Allows for new text, img, and newsletter files to be uploaded to site'),
(30, 'Grading', 'Shows current grade table for assignment'),
(31, 'Home', 'Takes user to home page'),
(32, 'Ideas', 'Page that describes design inspiration and ideas of where they came from'),
(33, 'ListData', 'Shows all current data to user'),
(34, 'processAddEdit', 'Function to add or edit specific SQL entries'),
(35, 'processFileUpload', 'Function to validate the file upload mechanism'),
(36, 'processLogoUpload', 'Function to validate the file upload mechanism'),
(37, 'processNewsletterUpload', 'Function to validate the file upload mechanism'),
(38, 'Purchase', 'Shows user where they can buy the book online'),
(39, 'Sales', 'Shows user current number of sales'),
(40, 'SearchSales', 'Allows user to search through different sale data entries'),
(41, 'sendEmail', 'Function to send monthly newsletter to all registered users'),
(42, 'SearchData', 'Allows user to search through sales history based on their criteria'),
(43, 'Location', 'Shows user current location of our printing company'),
(44, 'ProcessRegister', 'Function to validate the registration of a new user on the email list'),
(45, 'Register', 'Shows user current sign-up form page'),
(46, 'Reviews', 'Shows user current reviews posted on Amazon'),
(47, 'SecurityCheckUserNameExists', 'Check to see if username already exists before adding it to new users'),
(48, 'StudentQuestion', 'Allows user to search student records'),
(49, 'ProcessStudentQuestion', 'Allows user to search students'),
(50, 'ProcessDisplaySerials', 'Test function to show the user serial strings / saved search links'),
(51, 'RebuildQuestion', 'Builds a student question from a serial string'),
(52, 'ProcessImportData', 'Allows user to import student and class data');

-- --------------------------------------------------------

--
-- Table structure for table `rolefunctions`
--

CREATE TABLE IF NOT EXISTS `rolefunctions` (
  `RoleID` int(11) NOT NULL,
  `FunctionID` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `rolefunctions`
--

INSERT IGNORE INTO `rolefunctions` (`RoleID`, `FunctionID`) VALUES
(2, 1),
(2, 6),
(2, 7),
(2, 8),
(2, 9),
(2, 10),
(2, 11),
(2, 12),
(2, 13),
(2, 14),
(2, 15),
(4, 20),
(4, 22),
(4, 24),
(4, 27),
(4, 30),
(4, 31),
(4, 32),
(4, 38),
(4, 45),
(4, 46),
(4, 39),
(4, 42),
(4, 19),
(4, 16),
(4, 17),
(4, 11),
(4, 18),
(4, 23),
(4, 33),
(4, 43),
(4, 44),
(4, 40),
(3, 20),
(3, 22),
(3, 23),
(3, 24),
(3, 25),
(3, 27),
(3, 30),
(3, 31),
(3, 32),
(3, 33),
(3, 43),
(3, 44),
(3, 38),
(3, 45),
(3, 46),
(3, 39),
(3, 42),
(3, 40),
(3, 16),
(3, 17),
(3, 6),
(3, 11),
(3, 1),
(1, 20),
(1, 21),
(1, 22),
(1, 23),
(1, 24),
(1, 25),
(1, 26),
(1, 27),
(1, 28),
(1, 29),
(1, 30),
(1, 31),
(1, 32),
(1, 33),
(1, 43),
(1, 34),
(1, 50),
(1, 35),
(1, 36),
(1, 37),
(1, 44),
(1, 49),
(1, 38),
(1, 51),
(1, 45),
(1, 46),
(1, 39),
(1, 42),
(1, 40),
(1, 47),
(1, 7),
(1, 9),
(1, 8),
(1, 19),
(1, 16),
(1, 17),
(1, 6),
(1, 11),
(1, 1),
(1, 10),
(1, 18),
(1, 15),
(1, 5),
(1, 12),
(1, 14),
(1, 13),
(1, 2),
(1, 4),
(1, 3),
(1, 41),
(1, 48),
(1, 52);
--
-- Indexes for dumped tables
--

--
-- Table structure for table `serials`
--

CREATE TABLE IF NOT EXISTS `serials` (
  `id` int(11) NOT NULL,
  `username` varchar(50) NOT NULL,
  `serial` varchar(5000) NOT NULL,
  `name` varchar(20) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;


--
-- Indexes for table `acad_program`
--


--
-- Indexes for table `functions`
--
ALTER TABLE `functions`
  ADD PRIMARY KEY  (`FunctionID`);

--
-- Indexes for table `rolefunctions`
--
ALTER TABLE `rolefunctions`
  ADD KEY  `RoleID` (`RoleID`),
  ADD KEY  `FunctionID` (`FunctionID`);

--
-- Indexes for table `roles`
--
ALTER TABLE `roles`
  ADD PRIMARY KEY  (`RoleID`);

--
-- Indexes for table `serials`
--
ALTER TABLE `serials`
  ADD PRIMARY KEY  (`id`);
--
-- Indexes for table `userroles`
--
ALTER TABLE `userroles`
  ADD KEY `UserName` (`UserName`),
  ADD KEY `RoleID` (`RoleID`);

--
-- Indexes for table `users`
--
ALTER TABLE `users`
  ADD PRIMARY KEY (`UserName`);

--
-- AUTO_INCREMENT for dumped tables
--

--
-- AUTO_INCREMENT for table `functions`
--
ALTER TABLE `functions`
  MODIFY `FunctionID` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=53;
--
-- AUTO_INCREMENT for table `roles`
--
ALTER TABLE `roles`
  MODIFY `RoleID` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=5;
--
-- AUTO_INCREMENT for table `serials`
--
ALTER TABLE `serials`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=191;
--

--
-- Constraints for dumped tables
--

--
-- Constraints for table `rolefunctions`
--
ALTER TABLE `rolefunctions`
  ADD CONSTRAINT `rolefunctions_ibfk_1` FOREIGN KEY (`RoleID`) REFERENCES `roles` (`RoleID`) ON DELETE CASCADE,
  ADD CONSTRAINT `rolefunctions_ibfk_2` FOREIGN KEY (`FunctionID`) REFERENCES `functions` (`FunctionID`) ON DELETE CASCADE;

--
-- Constraints for table `userroles`
--
ALTER TABLE `userroles`
  ADD CONSTRAINT `userroles_ibfk_1` FOREIGN KEY (`UserName`) REFERENCES `users` (`UserName`) ON DELETE CASCADE,
  ADD CONSTRAINT `userroles_ibfk_2` FOREIGN KEY (`RoleID`) REFERENCES `roles` (`RoleID`) ON DELETE CASCADE;
COMMIT;


-- -------------------------------------------------------------------------------------------------------------------------------

-- Table structure for table `classes`
--

CREATE TABLE IF NOT EXISTS `course` (
  `Subject` varchar(4) NOT NULL,
  `Catalog` varchar(5) NOT NULL,
  `Name` varchar(30) NOT NULL,
  `Acad_Org` varchar(4) NOT NULL,
  constraint PK_course Primary Key (Subject, Catalog )
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

CREATE TABLE IF NOT EXISTS`courseoffering` (
  `Term` int(11) NOT NULL,
  `Session` varchar(3) NOT NULL,
  `Subject` varchar(4) NOT NULL,
  `Catalog` varchar(5) NOT NULL,
  `Section` varchar(4) NOT NULL,
  `InstructorName` varchar(22) NOT NULL,
  `Count_ID` int(11) NOT NULL,
  `Start_Time` varchar(5) DEFAULT NULL,
  `End_Time` varchar(5) DEFAULT NULL,
  `Days` varchar(5) DEFAULT NULL,
  `Cap_Enrl` int(11) NOT NULL,
  constraint PK_courseoffering Primary Key (Term, Session, Subject, Catalog, Section),
  constraint FK_courseoffering_course Foreign Key (Subject, Catalog) references course(Subject, Catalog)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;


CREATE TABLE IF NOT EXISTS `student` (
  `ID` int(11) NOT NULL,
  `Name` varchar(30) NOT NULL,
  `Last_Term` int(11) NOT NULL,
  `Current` varchar(1) NOT NULL,
  `Location` varchar(7) NOT NULL,
  `Total` decimal(7,3) NOT NULL,
  `GPA` decimal(5,3) NOT NULL,
  `Phone` varchar(14) NOT NULL,
  `EagleMail_ID` varchar(38) NOT NULL,
  `Advisor_1` varchar(27) DEFAULT NULL,
  `Advisor_1_Email` varchar(24) DEFAULT NULL,
  `Advisor_2` varchar(22) DEFAULT NULL,
  `Advisor_2_Email` varchar(24) DEFAULT NULL,
  `Degree_Term` int(11) DEFAULT NULL,
  `Degree` varchar(4) DEFAULT NULL,
  `Graduated_Plan_1` varchar(10) DEFAULT NULL,
  `Graduated_Plan_2` varchar(10) DEFAULT NULL,
  `Graduated_Plan_3` varchar(10) DEFAULT NULL,
  `Graduated_Plan_4` varchar(10) DEFAULT NULL,
  `Graduated_Plan_5` varchar(30) DEFAULT NULL,
   constraint PK_student Primary Key (ID)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

CREATE TABLE IF NOT EXISTS `studentclass` (
  `ID` int(11) NOT NULL,
  `Term` int(11) NOT NULL,
  `Session` varchar(3) NOT NULL,
  `Subject` varchar(4) NOT NULL,
  `Catalog` varchar(5) NOT NULL,
  `Section` varchar(4) NOT NULL,
  `Grade` varchar(2) NOT NULL,
  `Descr` varchar(30),
  constraint PK_studentclass Primary Key (ID, Term, Session, Subject, Catalog, Section),
  constraint FK_studentclass_student Foreign Key (ID) references student(ID)
  )ENGINE=InnoDB DEFAULT CHARSET=latin1;

  CREATE INDEX IDX_STUDENTCLASS
  ON studentclass (Subject, Catalog);

CREATE TABLE IF NOT EXISTS `acad_program` (
  `Plan` varchar(10) NOT NULL,
  `Plan_Descr` varchar(30) DEFAULT NULL,

  constraint PK_acad_program Primary Key (Plan)
  )ENGINE=InnoDB DEFAULT CHARSET=latin1;

CREATE TABLE IF NOT EXISTS`studentmajor` (
  `ID` int(11) NOT NULL,
  `Plan` varchar(10) NOT NULL,

  constraint PK_studentmajor Primary Key (ID, Plan),
  constraint FK_studentmajor_student Foreign Key (ID) references student(ID),
  constraint FK_studentmajor_acad_program Foreign Key (Plan) references acad_program(Plan)
  )ENGINE=InnoDB DEFAULT CHARSET=latin1;

CREATE TABLE IF NOT EXISTS `settings` (
  `Oldest_Term` int(4) NOT NULL,
  `Current_Term` int(4) NOT NULL,
  `Latest_Term` int(4) NOT NULL,
  `Last_Import_Date` date NOT NULL,
  constraint PK_settings Primary Key (Oldest_Term)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

CREATE TABLE IF NOT EXISTS `subject` (
  `Subject` varchar(4) NOT NULL,

  constraint PK_subject Primary Key (Subject)
  )ENGINE=InnoDB DEFAULT CHARSET=latin1;

CREATE TABLE IF NOT EXISTS `programsubject` (
  `Plan` varchar(10) NOT NULL,
  `Subject` varchar(4) NOT NULL,

  constraint PK_programsubject Primary Key (Subject, Plan),
  constraint FK_programsubject_subject Foreign Key (Subject) references subject(Subject),
  constraint FK_programsubject_acad_program Foreign Key (Plan) references acad_program(Plan)
  )ENGINE=InnoDB DEFAULT CHARSET=latin1;

ALTER TABLE `cis411_csaapp`.`programsubject`
    ADD INDEX  `FK_programsubject_subject` (`Subject`) USING BTREE;

-- why isn't our CREATE working for our student ID FK?
-- for now, we add the INDEX after creating the table
-- Need to fix our CREATE statement before shipping, this is some janky shit
ALTER TABLE `cis411_csaapp`.`studentmajor`
    ADD INDEX `FK_studentmajor_student` (`ID`) USING BTREE;


-- Table structure for table `users`
--


-- -------------------- ˇUSERPROGRAMSˇ ----------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS `userprograms` (
  `UserName` varchar(32) NOT NULL,
  `Plan` varchar(10) NOT NULL,
  constraint PK_userprograms Primary Key (UserName, Plan),
  constraint FK_userprograms_acad_program Foreign Key (Plan) references acad_program(Plan)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

ALTER TABLE `cis411_csaapp`.`userprograms`
    ADD INDEX  `FK_userprograms_users` (`UserName`) USING BTREE;
-- -------------------- ^USERPROGRAMS^ ----------------------------------------------------------------------